{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "labuser",
            "type": "string",
            "metadata": {
                "description": "Username for VMs"
            }
        },
        "adminPassword": {
            "defaultValue": "M1crosoft123",
            "type": "securestring",
            "metadata": {
                "description": "Password for VMs"
            }
        },
        "createVPNGateway": {
            "defaultValue": "yes",
            "type": "string",
            "allowedValues": [
                "yes",
                "no"
            ],
            "metadata": {
                "description": "Controls whether VPN gateways will be deployed"
            }
        }
    },
    "variables": {
        "baseURL": "https://raw.githubusercontent.com/Araffe/vdc-networking-lab/master/",
        "vnetTemplateURL": "[concat(variables('baseURL'), 'vdc-vnets.json')]",
        "vnetPeeringTemplateURL": "[concat(variables('baseURL'), 'VNet-Peering.json')]",
        "vpnGwTemplateURL": "[concat(variables('baseURL'), 'vpn-gw.json')]",
        "singleVMTemplateURL": "[concat(variables('baseURL'), 'Single-VM.json')]",
        "multiVMTemplateURL": "[concat(variables('baseURL'), 'MultiVM-LoadBalanced.json')]",
        "dummyTemplateURL": "[concat(variables('baseURL'), 'Nothing.json')]",
        "nvaTemplateURL": "[concat(variables('baseURL'), 'Deploy-NVAs.json')]",
        "vpnGwTemplateHub": {
            "vnetName": {
                "value": "Hub_VNet"
            },
            "gwName": {
                "value": "Hub_GW1"
            },
            "PIPName": {
                "value": "Hub_VNet-gwPip"
            }
        },
        "vpnGwTemplateOnPrem": {
            "vnetName": {
                "value": "OnPrem_VNet"
            },
            "gwName": {
                "value": "OnPrem_GW1"
            },
            "PIPName": {
                "value": "OnPrem_VNet-gwPip"
            }
        },
        "vmTemplateSpoke1": {
            "vmName": {
                "value": "Spoke1-VM"
            },
            "lbPIPName": {
                "value": "Spoke1-LB-PIP"
            },
            "lbName": {
                "value": "Spoke1-LB"
            },
            "vnetName": {
                "value": "Spoke_VNet1"
            },
            "subnetName": {
                "value": "Spoke_VNet1-Subnet"
            },
            "vmType": {
                "value": "ubuntu"
            },
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "availabilitySetName": {
                "value": "Spoke1-AvailabilitySet"
            }
        },
        "vmTemplateSpoke2": {
            "vmName": {
                "value": "Spoke2-VM"
            },
            "lbPIPName": {
                "value": "Spoke2-LB-PIP"
            },
            "lbName": {
                "value": "Spoke2-LB"
            },
            "vnetName": {
                "value": "Spoke_VNet2"
            },
            "subnetName": {
                "value": "Spoke_VNet2-Subnet"
            },
            "vmType": {
                "value": "ubuntu"
            },
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "availabilitySetName": {
                "value": "Spoke2-AvailabilitySet"
            }
        },
        "vmTemplateSpoke3": {
            "vmName": {
                "value": "Spoke3-VM"
            },
            "lbPIPName": {
                "value": "Spoke3-LB-PIP"
            },
            "lbName": {
                "value": "Spoke3-LB"
            },
            "vnetName": {
                "value": "Spoke_VNet3"
            },
            "subnetName": {
                "value": "Spoke_VNet3-Subnet"
            },
            "vmType": {
                "value": "ubuntu"
            },
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "availabilitySetName": {
                "value": "Spoke3-AvailabilitySet"
            }
        },
        "vmTemplateOnPrem": {
            "vmName": {
                "value": "OnPrem-VM1"
            },
            "vnetName": {
                "value": "OnPrem_VNet"
            },
            "subnetName": {
                "value": "OnPrem_VNet-Subnet1"
            },
            "vmType": {
                "value": "ubuntu"
            },
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "vmPIPName": {
                "value": "OnPrem-VM1-PIP"
            }
        },
        "nvaTemplate": {
            "vnetName": {
                "value": "Hub_VNet"
            },
            "adminUsername": {
                "value": "[parameters('adminUsername')]"
            },
            "adminPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "VDCResourceGroup": {
                "value": "[resourceGroup().name]"
            }
        }
    },
    "resources": [
        {
            "comments": "Create 5 VNets - 1 hub, 3 spokes and 1 on-premise",
            "name": "vnets",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-06-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "comments": "create VNet peering - Hub_VNet to Spoke_VNet1",
            "name": "Hub-Spoke1-Peering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-06-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hubVnetName": {
                        "value": "Hub_VNet"
                    },
                    "spokeVnetName": {
                        "value": "Spoke_VNet1"
                    }
                }
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "create VNet peering - Hub_VNet to Spoke_VNet2",
            "name": "Hub-Spoke2-Peering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-06-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hubVnetName": {
                        "value": "Hub_VNet"
                    },
                    "spokeVnetName": {
                        "value": "Spoke_VNet2"
                    }
                }
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "create VNet peering - Hub_VNet to Spoke_VNet3",
            "name": "Hub-Spoke3-Peering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-06-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hubVnetName": {
                        "value": "Hub_VNet"
                    },
                    "spokeVnetName": {
                        "value": "Spoke_VNet3"
                    }
                }
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "Create public IP address for VNet GW in Hub_VNet",
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "Hub_VNet-gwPip",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "Create public IP address for VNet GW in OnPrem_VNet",
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "OnPrem_VNet-gwPip",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "Create VPN gateway in Hub_VNet1.",
            "name": "Hub_GW1",
            "condition": "[equals(parameters('createVPNGateway'), 'yes')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpnGwTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('vpnGwTemplateHub')]"
            },
            "dependsOn": [
                "Hub_VNet-gwPip",
                "vnets"
            ]
        },
        {
            "comments": "Create VPN gateway in OnPrem_VNet1.",
            "name": "OnPrem_GW1",
            "condition": "[equals(parameters('createVPNGateway'), 'yes')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpnGwTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('vpnGwTemplateOnPrem')]"
            },
            "dependsOn": [
                "OnPrem_VNet-gwPip",
                "vnets"
            ]
        },
        {
            "comments": "Create two VMs in an availability set with load balancing in Spoke 1 VNet",
            "name": "createSpoke1VMs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('multiVMTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('vmTemplateSpoke1')]"
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "Create two VMs in an availability set with load balancing in Spoke 2 VNet",
            "name": "createSpoke2VMs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('multiVMTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('vmTemplateSpoke2')]"
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "Create single VM in on-premises VNet",
            "name": "createOnPremVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('singleVMTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('vmTemplateOnPrem')]"
            },
            "dependsOn": [
                "vnets"
            ]
        },
        {
            "comments": "Create Cisco CSR router in Hub VNet",
            "name": "createNVAs",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "VDC-NVA",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nvaTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": "[variables('nvaTemplate')]"
            },
            "dependsOn": [
                "vnets"
            ]
        }
    ]
}